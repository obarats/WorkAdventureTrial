declare const initI18n: (newLocale: string, getTranslationForLocaleCallback: import("../../runtime/src/util.loader").TranslationLoader<string, import("../../core").BaseTranslation> | import("../../runtime/src/util.loader").TranslationLoaderAsync<string, import("../../runtime/src/core").BaseTranslation>, initFormattersCallback?: import("../../runtime/src/util.loader").FormattersInitializer<string, import("../../runtime/src/core").BaseFormatters> | import("../../runtime/src/util.loader").AsyncFormattersInitializer<string, import("../../runtime/src/core").BaseFormatters> | undefined) => Promise<void>, setLocale: (locale: string) => Promise<void>, isLoadingLocale: import("svelte/store").Readable<boolean>, locale: import("svelte/store").Readable<string>, LL: import("svelte/store").Readable<import("../../runtime/src/core").TranslationFunctions<import("../../runtime/src/core").BaseTranslation>> & import("../../runtime/src/core").TranslationFunctions<import("../../runtime/src/core").BaseTranslation>;
export { initI18n, setLocale, isLoadingLocale, locale, LL };
export default LL;
