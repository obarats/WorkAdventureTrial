import { isPluralPart } from './core.mjs';
// --------------------------------------------------------------------------------------------------------------------
export const partsAsStringWithoutTypes = (parts) => parts.map(partAsStringWithoutTypes).join('');
// --------------------------------------------------------------------------------------------------------------------
export const partAsStringWithoutTypes = (part) => {
    var _a;
    if (typeof part === 'string') {
        return part;
    }
    if (isPluralPart(part)) {
        return `{{${[part.z, part.o, part.t, part.f, part.m, part.r].filter((value) => value !== undefined).join('|')}}}`;
    }
    return `{${part.k}${part.n ? '?' : ''}${((_a = part.f) === null || _a === void 0 ? void 0 : _a.length) ? `|${part.f.join('|')}` : ''}}`;
};
// --------------------------------------------------------------------------------------------------------------------
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const getFallbackProxy = (prefixKey) => new Proxy((prefixKey ? () => prefixKey : {}), {
    get: (_target, key) => getFallbackProxy(prefixKey ? `${prefixKey}.${key}` : key),
});
//# sourceMappingURL=core-utils.js.map