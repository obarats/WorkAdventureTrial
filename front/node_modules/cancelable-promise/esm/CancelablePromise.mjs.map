{"version":3,"sources":["../src/CancelablePromise.ts"],"names":["CancelablePromiseInternal","constructor","executor","internals","defaultInternals","promise","Promise","resolve","reject","onCancel","onCancelList","push","cancel","bind","then","onfulfilled","onrejected","makeCancelable","createCallback","catch","finally","onfinally","runWhenCanceled","filter","callback","isCanceled","callbacks","err","console","error","CancelablePromise","all","iterable","makeAllCancelable","allSettled","race","value","cancelable","reason","isCancelablePromise","onResult","arg","result","resolvable"],"mappings":"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","sourcesContent":["class CancelablePromiseInternal<T = any> {\n  #internals: Internals;\n  #promise: Promise<T>;\n\n  constructor({\n    executor = () => {},\n    internals = defaultInternals(),\n    promise = new Promise<T>((resolve, reject) =>\n      executor(resolve, reject, (onCancel) => {\n        internals.onCancelList.push(onCancel);\n      })\n    ),\n  }: {\n    executor?: (\n      resolve: (value: T | PromiseLike<T>) => void,\n      reject: (reason?: any) => void,\n      onCancel: (cancelHandler: () => void) => void\n    ) => void;\n    internals?: Internals;\n    promise?: Promise<T>;\n  }) {\n    this.cancel = this.cancel.bind(this);\n    this.#internals = internals;\n    this.#promise =\n      promise ||\n      new Promise<T>((resolve, reject) =>\n        executor(resolve, reject, (onCancel) => {\n          internals.onCancelList.push(onCancel);\n        })\n      );\n  }\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?:\n      | ((\n          value: T\n        ) => TResult1 | PromiseLike<TResult1> | CancelablePromise<TResult1>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((\n          reason: any\n        ) => TResult2 | PromiseLike<TResult2> | CancelablePromise<TResult2>)\n      | undefined\n      | null\n  ): CancelablePromise<TResult1 | TResult2> {\n    return makeCancelable<TResult1 | TResult2>(\n      this.#promise.then(\n        createCallback(onfulfilled, this.#internals),\n        createCallback(onrejected, this.#internals)\n      ),\n      this.#internals\n    );\n  }\n\n  catch<TResult = never>(\n    onrejected?:\n      | ((\n          reason: any\n        ) => TResult | PromiseLike<TResult> | CancelablePromise<TResult>)\n      | undefined\n      | null\n  ): CancelablePromise<T | TResult> {\n    return makeCancelable<T | TResult>(\n      this.#promise.catch(createCallback(onrejected, this.#internals)),\n      this.#internals\n    );\n  }\n\n  finally(\n    onfinally?: (() => void) | undefined | null,\n    runWhenCanceled?: boolean\n  ): CancelablePromise<T> {\n    if (runWhenCanceled) {\n      this.#internals.onCancelList.push(onfinally);\n    }\n    return makeCancelable<T>(\n      this.#promise.finally(\n        createCallback(() => {\n          if (onfinally) {\n            if (runWhenCanceled) {\n              this.#internals.onCancelList =\n                this.#internals.onCancelList.filter(\n                  (callback) => callback !== onfinally\n                );\n            }\n            return onfinally();\n          }\n        }, this.#internals)\n      ),\n      this.#internals\n    );\n  }\n\n  cancel(): void {\n    this.#internals.isCanceled = true;\n    const callbacks = this.#internals.onCancelList;\n    this.#internals.onCancelList = [];\n    for (const callback of callbacks) {\n      if (typeof callback === 'function') {\n        try {\n          callback();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n\n  isCanceled(): boolean {\n    return this.#internals.isCanceled === true;\n  }\n}\n\nexport class CancelablePromise<T = any> extends CancelablePromiseInternal<T> {\n  static all = function all(iterable: any) {\n    return makeAllCancelable(iterable, Promise.all(iterable));\n  } as CancelablePromiseOverloads['all'];\n\n  static allSettled = function allSettled(iterable: any) {\n    return makeAllCancelable(iterable, Promise.allSettled(iterable));\n  } as CancelablePromiseOverloads['allSettled'];\n\n  static race = function race(iterable) {\n    return makeAllCancelable(iterable, Promise.race(iterable));\n  } as CancelablePromiseOverloads['race'];\n\n  static resolve = function resolve(value) {\n    return cancelable(Promise.resolve(value));\n  } as CancelablePromiseOverloads['resolve'];\n\n  static reject = function reject(reason) {\n    return cancelable(Promise.reject(reason));\n  } as CancelablePromiseOverloads['reject'];\n\n  static isCancelable = isCancelablePromise;\n\n  constructor(\n    executor: (\n      resolve: (value: T | PromiseLike<T>) => void,\n      reject: (reason?: any) => void,\n      onCancel: (cancelHandler: () => void) => void\n    ) => void\n  ) {\n    super({ executor });\n  }\n}\n\nexport default CancelablePromise;\n\nexport function cancelable<T = any>(promise: Promise<T>): CancelablePromise<T> {\n  return makeCancelable(promise, defaultInternals());\n}\n\nexport function isCancelablePromise(promise: any): boolean {\n  return (\n    promise instanceof CancelablePromise ||\n    promise instanceof CancelablePromiseInternal\n  );\n}\n\nfunction createCallback(onResult: any, internals: Internals) {\n  if (onResult) {\n    return (arg?: any) => {\n      if (!internals.isCanceled) {\n        const result = onResult(arg);\n        if (isCancelablePromise(result)) {\n          internals.onCancelList.push(result.cancel);\n        }\n        return result;\n      }\n      return arg;\n    };\n  }\n}\n\nfunction makeCancelable<T>(promise: Promise<T>, internals: Internals) {\n  return new CancelablePromiseInternal<T>({\n    internals,\n    promise,\n  }) as CancelablePromise<T>;\n}\n\nfunction makeAllCancelable(iterable: any, promise: Promise<any>) {\n  const internals = defaultInternals();\n  internals.onCancelList.push(() => {\n    for (const resolvable of iterable) {\n      if (isCancelablePromise(resolvable)) {\n        resolvable.cancel();\n      }\n    }\n  });\n  return new CancelablePromiseInternal({ internals, promise });\n}\n\nfunction defaultInternals(): Internals {\n  return { isCanceled: false, onCancelList: [] };\n}\n\ninterface Internals {\n  isCanceled: boolean;\n  onCancelList: any[];\n}\n\ninterface CancelablePromiseOverloads {\n  all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>,\n      T10 | PromiseLike<T10>,\n      T11 | PromiseLike<T11>,\n      T12 | PromiseLike<T12>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]>;\n\n  all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>,\n      T10 | PromiseLike<T10>,\n      T11 | PromiseLike<T11>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]>;\n\n  all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>,\n      T10 | PromiseLike<T10>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\n\n  all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\n\n  all<T1, T2, T3, T4, T5, T6, T7, T8>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7, T8]>;\n\n  all<T1, T2, T3, T4, T5, T6, T7>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7]>;\n\n  all<T1, T2, T3, T4, T5, T6>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5, T6]>;\n\n  all<T1, T2, T3, T4, T5>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4, T5]>;\n\n  all<T1, T2, T3, T4>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>\n    ]\n  ): CancelablePromise<[T1, T2, T3, T4]>;\n\n  all<T1, T2, T3>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>\n    ]\n  ): CancelablePromise<[T1, T2, T3]>;\n\n  all<T1, T2>(\n    values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]\n  ): CancelablePromise<[T1, T2]>;\n\n  all<T>(values: readonly (T | PromiseLike<T>)[]): CancelablePromise<T[]>;\n\n  allSettled<T extends readonly unknown[] | readonly [unknown]>(\n    values: T\n  ): CancelablePromise<\n    {\n      -readonly [P in keyof T]: PromiseSettledResult<\n        T[P] extends PromiseLike<infer U> ? U : T[P]\n      >;\n    }\n  >;\n\n  allSettled<T>(\n    values: Iterable<T>\n  ): CancelablePromise<\n    PromiseSettledResult<T extends PromiseLike<infer U> ? U : T>[]\n  >;\n\n  race<T>(\n    values: readonly T[]\n  ): CancelablePromise<T extends PromiseLike<infer U> ? U : T>;\n\n  resolve(): CancelablePromise<void>;\n\n  resolve<T>(\n    value: T | PromiseLike<T> | CancelablePromise<T>\n  ): CancelablePromise<T>;\n\n  reject<T = never>(reason?: any): CancelablePromise<T>;\n}\n"],"file":"CancelablePromise.mjs"}