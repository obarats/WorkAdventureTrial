declare class CancelablePromiseInternal<T = any> {
    #private;
    constructor({ executor, internals, promise, }: {
        executor?: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void, onCancel: (cancelHandler: () => void) => void) => void;
        internals?: Internals;
        promise?: Promise<T>;
    });
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1> | CancelablePromise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2> | CancelablePromise<TResult2>) | undefined | null): CancelablePromise<TResult1 | TResult2>;
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult> | CancelablePromise<TResult>) | undefined | null): CancelablePromise<T | TResult>;
    finally(onfinally?: (() => void) | undefined | null, runWhenCanceled?: boolean): CancelablePromise<T>;
    cancel(): void;
    isCanceled(): boolean;
}
export declare class CancelablePromise<T = any> extends CancelablePromiseInternal<T> {
    static all: {
        <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>, T11 | PromiseLike<T11>, T12 | PromiseLike<T12>]): CancelablePromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]>;
        <T1_1, T2_1, T3_1, T4_1, T5_1, T6_1, T7_1, T8_1, T9_1, T10_1, T11_1>(values: readonly [T1_1 | PromiseLike<T1_1>, T2_1 | PromiseLike<T2_1>, T3_1 | PromiseLike<T3_1>, T4_1 | PromiseLike<T4_1>, T5_1 | PromiseLike<T5_1>, T6_1 | PromiseLike<T6_1>, T7_1 | PromiseLike<T7_1>, T8_1 | PromiseLike<T8_1>, T9_1 | PromiseLike<T9_1>, T10_1 | PromiseLike<T10_1>, T11_1 | PromiseLike<T11_1>]): CancelablePromise<[T1_1, T2_1, T3_1, T4_1, T5_1, T6_1, T7_1, T8_1, T9_1, T10_1, T11_1]>;
        <T1_2, T2_2, T3_2, T4_2, T5_2, T6_2, T7_2, T8_2, T9_2, T10_2>(values: readonly [T1_2 | PromiseLike<T1_2>, T2_2 | PromiseLike<T2_2>, T3_2 | PromiseLike<T3_2>, T4_2 | PromiseLike<T4_2>, T5_2 | PromiseLike<T5_2>, T6_2 | PromiseLike<T6_2>, T7_2 | PromiseLike<T7_2>, T8_2 | PromiseLike<T8_2>, T9_2 | PromiseLike<T9_2>, T10_2 | PromiseLike<T10_2>]): CancelablePromise<[T1_2, T2_2, T3_2, T4_2, T5_2, T6_2, T7_2, T8_2, T9_2, T10_2]>;
        <T1_3, T2_3, T3_3, T4_3, T5_3, T6_3, T7_3, T8_3, T9_3>(values: readonly [T1_3 | PromiseLike<T1_3>, T2_3 | PromiseLike<T2_3>, T3_3 | PromiseLike<T3_3>, T4_3 | PromiseLike<T4_3>, T5_3 | PromiseLike<T5_3>, T6_3 | PromiseLike<T6_3>, T7_3 | PromiseLike<T7_3>, T8_3 | PromiseLike<T8_3>, T9_3 | PromiseLike<T9_3>]): CancelablePromise<[T1_3, T2_3, T3_3, T4_3, T5_3, T6_3, T7_3, T8_3, T9_3]>;
        <T1_4, T2_4, T3_4, T4_4, T5_4, T6_4, T7_4, T8_4>(values: readonly [T1_4 | PromiseLike<T1_4>, T2_4 | PromiseLike<T2_4>, T3_4 | PromiseLike<T3_4>, T4_4 | PromiseLike<T4_4>, T5_4 | PromiseLike<T5_4>, T6_4 | PromiseLike<T6_4>, T7_4 | PromiseLike<T7_4>, T8_4 | PromiseLike<T8_4>]): CancelablePromise<[T1_4, T2_4, T3_4, T4_4, T5_4, T6_4, T7_4, T8_4]>;
        <T1_5, T2_5, T3_5, T4_5, T5_5, T6_5, T7_5>(values: readonly [T1_5 | PromiseLike<T1_5>, T2_5 | PromiseLike<T2_5>, T3_5 | PromiseLike<T3_5>, T4_5 | PromiseLike<T4_5>, T5_5 | PromiseLike<T5_5>, T6_5 | PromiseLike<T6_5>, T7_5 | PromiseLike<T7_5>]): CancelablePromise<[T1_5, T2_5, T3_5, T4_5, T5_5, T6_5, T7_5]>;
        <T1_6, T2_6, T3_6, T4_6, T5_6, T6_6>(values: readonly [T1_6 | PromiseLike<T1_6>, T2_6 | PromiseLike<T2_6>, T3_6 | PromiseLike<T3_6>, T4_6 | PromiseLike<T4_6>, T5_6 | PromiseLike<T5_6>, T6_6 | PromiseLike<T6_6>]): CancelablePromise<[T1_6, T2_6, T3_6, T4_6, T5_6, T6_6]>;
        <T1_7, T2_7, T3_7, T4_7, T5_7>(values: readonly [T1_7 | PromiseLike<T1_7>, T2_7 | PromiseLike<T2_7>, T3_7 | PromiseLike<T3_7>, T4_7 | PromiseLike<T4_7>, T5_7 | PromiseLike<T5_7>]): CancelablePromise<[T1_7, T2_7, T3_7, T4_7, T5_7]>;
        <T1_8, T2_8, T3_8, T4_8>(values: readonly [T1_8 | PromiseLike<T1_8>, T2_8 | PromiseLike<T2_8>, T3_8 | PromiseLike<T3_8>, T4_8 | PromiseLike<T4_8>]): CancelablePromise<[T1_8, T2_8, T3_8, T4_8]>;
        <T1_9, T2_9, T3_9>(values: readonly [T1_9 | PromiseLike<T1_9>, T2_9 | PromiseLike<T2_9>, T3_9 | PromiseLike<T3_9>]): CancelablePromise<[T1_9, T2_9, T3_9]>;
        <T1_10, T2_10>(values: readonly [T1_10 | PromiseLike<T1_10>, T2_10 | PromiseLike<T2_10>]): CancelablePromise<[T1_10, T2_10]>;
        <T_1>(values: readonly (T_1 | PromiseLike<T_1>)[]): CancelablePromise<T_1[]>;
    };
    static allSettled: {
        <T_1 extends readonly unknown[] | readonly [unknown]>(values: T_1): CancelablePromise<{ -readonly [P in keyof T_1]: PromiseSettledResult<T_1[P] extends PromiseLike<infer U> ? U : T_1[P]>; }>;
        <T_2>(values: Iterable<T_2>): CancelablePromise<PromiseSettledResult<T_2 extends PromiseLike<infer U_1> ? U_1 : T_2>[]>;
    };
    static race: <T_1>(values: readonly T_1[]) => CancelablePromise<T_1 extends PromiseLike<infer U> ? U : T_1>;
    static resolve: {
        (): CancelablePromise<void>;
        <T_1>(value: T_1 | PromiseLike<T_1> | CancelablePromise<T_1>): CancelablePromise<T_1>;
    };
    static reject: <T_1 = never>(reason?: any) => CancelablePromise<T_1>;
    static isCancelable: typeof isCancelablePromise;
    constructor(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void, onCancel: (cancelHandler: () => void) => void) => void);
}
export default CancelablePromise;
export declare function cancelable<T = any>(promise: Promise<T>): CancelablePromise<T>;
export declare function isCancelablePromise(promise: any): boolean;
interface Internals {
    isCanceled: boolean;
    onCancelList: any[];
}
